import chroma from "chroma-js";

/**
 *
 * @typedef ColorScheme
 * @prop {background} string Background color
 * @prop {foreground} string Foreground color
 * @prop {black} string Black color
 * @prop {red} string Red color
 * @prop {green} string Green color
 * @prop {yellow} string Yellow color
 * @prop {blue} string Blue color
 * @prop {purple} string Purple color
 * @prop {cyan} string Cyan color
 * @prop {white} string White color
 * @prop {brightBlack} string BrightBlack color
 * @prop {brightRed} string BrightRed color
 * @prop {brightGreen} string BrightGreen color
 * @prop {brightYellow} string BrightYellow color
 * @prop {brightBlue} string BrightBlue color
 * @prop {brightPurple} string BrightPurple color
 * @prop {brightCyan} string BrightCyan color
 * @prop {brightWhite} string BrightWhite color
 */

/**
 *
 * @typedef ThemeProps
 * @prop {string} name Theme name
 * @prop {ColorScheme} colorScheme The colorscheme
 */

const alpha = (color, alpha) => {
  return chroma(color).alpha(alpha).hex();
};

const brighten = (color, num) => {
  return chroma(color).brighten(num).hex();
};

const darken = (color, num) => {
  return chroma(color).darken(num).hex();
};

/**
 * @param {ThemeProps} props
 */
function theme(props) {
  const scheme = props.colorScheme;

  const transparent = "#00000000";
  const orange = chroma.mix(scheme.red, scheme.yellow, 0.3).hex();
  const gray = brighten(scheme.black, 1.5);

  const darkerBg = darken(scheme.background, 0.3);
  const darkerFg = darken(scheme.foreground, 0.3);
  const secondaryBg = chroma
    .mix(scheme.background, scheme.blue, 0.01)
    .brighten(0.3)
    .hex();

  const borderNormal = brighten(secondaryBg, 0.3);
  const borderFocused = alpha(scheme.red, 0.4);
  const selectedBg = alpha(scheme.red, 0.2);
  const errorFg = alpha(scheme.red, 0.7);

  return {
    name: props.name,
    colors: {
      errorForeground: errorFg,
      focusBorder: borderFocused,
      foreground: scheme.foreground,
      "activityBar.activeBorder": transparent,
      "activityBar.background": scheme.background,
      "activityBar.border": borderNormal,
      "activityBar.foreground": scheme.red,
      "activityBar.inactiveForeground": alpha(darkerFg, 0.6),
      "activityBarBadge.background": scheme.red,
      "breadcrumb.foreground": darkerFg,
      "button.background": borderFocused,
      "button.hoverBackground": errorFg,
      "debugExceptionWidget.border": scheme.red,
      "debugToolBar.background": secondaryBg,
      "dropdown.background": scheme.background,
      "dropdown.border": borderFocused,
      "dropdown.foreground": scheme.foreground,
      "dropdown.listBackground": scheme.background,
      "editor.background": scheme.background,
      "editor.findMatchBackground": borderFocused,
      "editor.findMatchBorder": transparent,
      "editor.findMatchHighlightBackground": selectedBg,
      "editor.findMatchHighlightBorder": transparent,
      "editor.findRangeHighlightBackground": borderFocused,
      "editor.foreground": scheme.foreground,
      "editor.lineHighlightBackground": secondaryBg,
      "editor.rangeHighlightBackground": selectedBg,
      "editor.selectionBackground": borderFocused,
      "editor.selectionForeground": alpha(secondaryBg, 0.7),
      "editor.selectionHighlightBackground": secondaryBg,
      "editor.selectionHighlightBorder": borderFocused,
      "editor.wordHighlightBackground": scheme.background,
      "editor.wordHighlightBorder": borderFocused,
      "editor.wordHighlightStrongBackground": scheme.background,
      "editor.wordHighlightStrongBorder": borderFocused,
      "editorBracketMatch.border": gray,
      "editorCursor.foreground": scheme.red,
      "editorError.foreground": borderFocused,
      "editorGroup.border": borderNormal,
      "editorGroup.dropBackground": borderFocused,
      "editorGroup.emptyBackground": scheme.background,
      "editorGroupHeader.tabsBackground": scheme.background,
      "editorGroupHeader.tabsBorder": borderNormal,
      "editorHint.foreground": scheme.yellow,
      "editorHoverWidget.background": scheme.background,
      "editorHoverWidget.border": scheme.red,
      "editorIndentGuide.activeBackground": brighten(borderNormal, 1),
      "editorIndentGuide.background": alpha(borderNormal, 0.5),
      "editorLineNumber.activeForeground": scheme.red,
      "editorLineNumber.foreground": gray,
      "editorMarkerNavigation.background": darkerBg,
      "editorOverviewRuler.border": borderNormal,
      "editorOverviewRuler.selectionHighlightForeground": orange,
      "editorPane.background": darkerBg,
      "editorRuler.foreground": borderNormal,
      "editorSuggestWidget.background": secondaryBg,
      "editorSuggestWidget.border": borderNormal,
      "editorSuggestWidget.foreground": scheme.red,
      "editorSuggestWidget.highlightForeground": scheme.brightWhite,
      "editorSuggestWidget.selectedBackground": selectedBg,
      "editorWarning.foreground": orange,
      "editorWhitespace.foreground": secondaryBg,
      "editorWidget.background": secondaryBg,
      "editorWidget.border": scheme.red,
      "input.background": scheme.background,
      "input.border": borderNormal,
      "input.foreground": darkerFg,
      "input.placeholderForeground": darkerFg,
      "inputOption.activeBorder": errorFg,
      "inputValidation.errorBackground": scheme.background,
      "inputValidation.errorBorder": errorFg,
      "inputValidation.infoBackground": scheme.background,
      "inputValidation.infoBorder": gray,
      "inputValidation.warningBackground": scheme.background,
      "inputValidation.warningBorder": orange,
      "list.activeSelectionBackground": selectedBg,
      "list.dropBackground": alpha(secondaryBg, 0.5),
      "list.errorForeground": errorFg,
      "list.focusBackground": alpha(secondaryBg, 0.5),
      "list.focusForeground": scheme.brightWhite,
      "list.highlightForeground": scheme.brightWhite,
      "list.hoverBackground": alpha(secondaryBg, 0.5),
      "list.hoverForeground": scheme.brightWhite,
      "list.inactiveSelectionBackground": alpha(secondaryBg, 0.5),
      "list.inactiveSelectionForeground": darkerFg,
      "list.warningForeground": orange,
      "menu.background": secondaryBg,
      "menu.foreground": scheme.foreground,
      "menu.selectionBackground": borderFocused,
      "menu.selectionBorder": borderNormal,
      "menu.selectionForeground": scheme.white,
      "menu.separatorBackground": scheme.black,
      "menubar.selectionBackground": borderFocused,
      "menubar.selectionBorder": borderNormal,
      "menubar.selectionForeground": darkerFg,
      "panel.background": scheme.background,
      "panel.border": borderNormal,
      "panelTitle.activeBorder": scheme.red,
      "panelTitle.activeForeground": scheme.red,
      "panelTitle.inactiveForeground": darkerFg,
      "peekView.border": scheme.red,
      "peekViewEditor.background": alpha(secondaryBg, 0.5),
      "peekViewEditor.matchHighlightBackground": alpha(secondaryBg, 0.5),
      "peekViewEditor.matchHighlightBorder": borderFocused,
      "peekViewResult.background": alpha(secondaryBg, 0.5),
      "peekViewResult.matchHighlightBackground": borderFocused,
      "peekViewResult.selectionBackground": borderFocused,
      "peekViewTitle.background": alpha(secondaryBg, 0.5),
      "pickerGroup.border": borderNormal,
      "pickerGroup.foreground": scheme.red,
      "progressBar.background": scheme.red,
      "scrollbar.shadow": scheme.background,
      "scrollbarSlider.activeBackground": borderFocused,
      "scrollbarSlider.background": alpha(secondaryBg, 0.5),
      "scrollbarSlider.hoverBackground": borderFocused,
      "selection.background": borderFocused,
      "settings.checkboxBackground": secondaryBg,
      "settings.checkboxBorder": scheme.background,
      "settings.checkboxForeground": scheme.foreground,
      "settings.dropdownBackground": scheme.background,
      "settings.dropdownBorder": borderNormal,
      "settings.dropdownForeground": scheme.foreground,
      "settings.headerForeground": scheme.foreground,
      "settings.numberInputBackground": scheme.background,
      "settings.numberInputBorder": borderNormal,
      "settings.numberInputForeground": scheme.foreground,
      "settings.textInputBackground": scheme.background,
      "settings.textInputBorder": borderNormal,
      "settings.textInputForeground": scheme.foreground,
      "sideBar.background": scheme.background,
      "sideBar.border": borderNormal,
      "sideBar.dropBackground": errorFg,
      "sideBar.foreground": darkerFg,
      "sideBarSectionHeader.background": scheme.background,
      "sideBarSectionHeader.foreground": darkerFg,
      "sideBarTitle.foreground": darkerFg,
      "statusBar.background": scheme.background,
      "statusBar.border": borderNormal,
      "statusBar.debuggingBackground": scheme.red,
      "statusBar.debuggingForeground": scheme.background,
      "statusBar.foreground": darkerFg,
      "statusBar.noFolderBackground": scheme.background,
      "statusBar.noFolderForeground": darkerFg,
      "statusBarItem.activeBackground": borderFocused,
      "statusBarItem.hoverBackground": borderFocused,
      "statusBarItem.remoteForeground": scheme.background,
      "tab.activeBackground": scheme.background,
      "tab.activeBorder": scheme.red,
      "tab.activeForeground": scheme.foreground,
      "tab.border": scheme.background,
      "tab.hoverBorder": scheme.red,
      "tab.inactiveBackground": scheme.background,
      "tab.inactiveForeground": gray,
      "tab.unfocusedActiveBorder": borderNormal,
      "tab.unfocusedActiveForeground": gray,
      "tab.unfocusedHoverBorder": gray,
      "tab.unfocusedInactiveForeground": gray,
      "terminal.ansiBlack": scheme.black,
      "terminal.ansiRed": scheme.red,
      "terminal.ansiGreen": scheme.green,
      "terminal.ansiYellow": scheme.yellow,
      "terminal.ansiBlue": scheme.blue,
      "terminal.ansiMagenta": scheme.purple,
      "terminal.ansiCyan": scheme.cyan,
      "terminal.ansiWhite": scheme.white,
      "terminal.ansiBrightBlack": scheme.brightBlack,
      "terminal.ansiBrightRed": scheme.brightRed,
      "terminal.ansiBrightGreen": scheme.brightGreen,
      "terminal.ansiBrightYellow": scheme.brightYellow,
      "terminal.ansiBrightBlue": scheme.brightBlue,
      "terminal.ansiBrightMagenta": scheme.brightPurple,
      "terminal.ansiBrightCyan": scheme.brightCyan,
      "terminal.ansiBrightWhite": scheme.brightWhite,
      "terminal.background": scheme.background,
      "terminal.foreground": scheme.foreground,
      "terminal.selectionBackground": selectedBg,
      "terminalCursor.background": scheme.background,
      "terminalCursor.foreground": scheme.foreground,
      "textBlockQuote.background": secondaryBg,
      "textBlockQuote.border": scheme.red,
      "textLink.activeForeground": scheme.purple,
      "textLink.foreground": scheme.blue,
      "textPreformat.foreground": scheme.purple,
      "textSeparator.foreground": gray,
      "titleBar.activeBackground": scheme.background,
      "titleBar.activeForeground": scheme.foreground,
      "titleBar.border": borderNormal,
      "titleBar.inactiveBackground": scheme.background,
      "titleBar.inactiveForeground": gray,
      "welcomePage.buttonBackground": secondaryBg,
      "welcomePage.buttonHoverBackground": secondaryBg,
      "widget.shadow": scheme.background,
    },
    semanticHighlighting: true,
    tokenColors: [
      {
        scope: [
          "constant.character.escape",
          "constant.keyword.clojure",
          "constant.language.symbol.elixir",
          "constant.language.symbol.ruby",
          "constant.other.symbol",
          "entity.name.class.xi",
          "entity.other.attribute-name.pseudo-class",
          "entity.other.attribute-name.pseudo-element",
          "keyword.control.xi",
          "keyword.operator.arithmetic",
          "keyword.operator.comparison",
          "keyword.operator.decrement",
          "keyword.operator.increment",
          "keyword.operator.relational",
          "keyword.operator.assignment",
          "keyword.operator.assignment.compound.js",
          "keyword.operator.assignment.compound.ts",
          "keyword.operator.bitwise",
          "keyword.operator.channel",
          "keyword.operator.comparison.php",
          "keyword.operator.css",
          "keyword.operator.scss",
          "keyword.operator.less",
          "keyword.operator.logical",
          "keyword.operator.logical.php",
          "keyword.operator.bitwise.php",
          "keyword.operator.arithmetic.php",
          "rgb-value",
          "source.json meta.structure.dictionary.json > constant.language.json",
          "source.json meta.structure.array.json > constant.language.json",
          "string.regexp",
          "support.function",
          "support.token.decorator.python",
          "meta.function.decorator.identifier.python",
          "support.type.object.dom",
          "support.type.posix-reserved.c",
          "support.type.posix-reserved.cpp",
          "support.type.prelude.elm",
          "support.type.python",
          "support.type.vendored.property-name.css",
        ],
        settings: {
          foreground: scheme.cyan,
        },
      },
      {
        scope: [
          "comment markup.link",
          "markup.quote.markdown",
          "punctuation.definition.tag.xi",
        ],
        settings: {
          foreground: scheme.brightBlack,
        },
      },
      {
        scope: [
          "accent.xi",
          "constant.character.xi",
          "entity.name.function",
          "entity.name.function",
          "support.function.console",
          "entity.name.goto-label.php",
          "support.other.php",
          "meta.require",
          "support.function.any-method",
          "variable.function",
        ],
        settings: {
          foreground: scheme.blue,
        },
      },
      {
        scope: ["entity.other.attribute-name.id"],
        settings: {
          fontStyle: "normal",
          foreground: scheme.blue,
        },
      },
      {
        scope: [
          "keyword.operator.expression.import",
          "keyword.other.special-method",
          "markup.heading punctuation.definition.heading, entity.name.section",
          "meta.diff.header.from-file",
          "meta.diff.header.to-file",
          "punctuation.definition.from-file.diff",
          "punctuation.definition.to-file.diff",
          "meta.function-call.generic.python",
          "meta.function-call.php",
          "meta.function-call.object.php",
          "meta.function-call.static.php",
          "meta.function.decorator.python",
          "meta.method.groovy",
          "meta.method.java",
          "string.other.link.title.markdown",
          "string.other.link.description.markdown",
          "support.function.std.rust",
          "support.type.type.flowtype",
          "token.info-token",
        ],
        settings: {
          foreground: scheme.blue,
        },
      },
      {
        scope: ["beginning.punctuation.definition.list.markdown.xi"],
        settings: {
          foreground: gray,
        },
      },
      {
        scope: ["comment, punctuation.definition.comment"],
        settings: {
          fontStyle: "italic",
          foreground: gray,
        },
      },
      {
        scope: [
          "beginning.punctuation.definition.quote.markdown.xi",
          "keyword.other.substitution.begin",
          "keyword.other.substitution.end",
          "keyword.other.template.begin",
          "keyword.other.template.end",
          "markup.inline.raw.markdown",
          "markup.inline.raw.string.markdown",
          "markup.inserted.diff",
          "meta.definition.class.inherited.classes.groovy",
          "punctuation.definition.string.begin",
          "punctuation.definition.string.end",
          "source.ini",
          "source.json meta.structure.dictionary.json > value.json > string.quoted.json",
          "source.json meta.structure.array.json > value.json > string.quoted.json",
          "source.json meta.structure.dictionary.json > value.json > string.quoted.json > punctuation",
          "source.json meta.structure.array.json > value.json > string.quoted.json > punctuation",
          "string",
        ],
        settings: {
          foreground: scheme.green,
        },
      },
      {
        scope: [
          "meta.brace.square",
          "block.scope.end",
          "block.scope.begin",
          "function.brace",
          "function.parameter",
          "function.parameter.ruby, function.parameter.cs",
          "invalid.illegal.bad-ampersand.html",
          "invalid.xi",
          "keyword.operator",
          "keyword.operator.misc.rust",
          "markup.heading.setext",
          "meta.tag",
          "meta.template.expression",
          "punctuation.definition.arguments.begin.python",
          "punctuation.definition.arguments.end.python",
          "punctuation.separator.arguments.python",
          "punctuation.definition.list.begin.python",
          "punctuation.definition.list.end.python",
          "punctuation.definition.block.sequence.item.yaml",
          "punctuation.definition.parameters.begin.bracket.round.php",
          "punctuation.definition.parameters.end.bracket.round.php",
          "punctuation.separator.delimiter.php",
          "punctuation.section.scope.begin.php",
          "punctuation.section.scope.end.php",
          "punctuation.terminator.expression.php",
          "punctuation.definition.arguments.begin.bracket.round.php",
          "punctuation.definition.arguments.end.bracket.round.php",
          "punctuation.definition.storage-type.begin.bracket.round.php",
          "punctuation.definition.storage-type.end.bracket.round.php",
          "punctuation.definition.array.begin.bracket.round.php",
          "punctuation.definition.array.end.bracket.round.php",
          "punctuation.definition.begin.bracket.round.php",
          "punctuation.definition.end.bracket.round.php",
          "punctuation.definition.begin.bracket.curly.php",
          "punctuation.definition.end.bracket.curly.php",
          "punctuation.definition.section.switch-block.end.bracket.curly.php",
          "punctuation.definition.section.switch-block.start.bracket.curly.php",
          "punctuation.definition.section.switch-block.begin.bracket.curly.php",
          "punctuation.definition.section.switch-block.end.bracket.curly.php",
          "punctuation.section.array.begin.php",
          "punctuation.section.array.end.php",
          "punctuation.section.block.begin.bracket.curly.cpp",
          "punctuation.section.block.end.bracket.curly.cpp",
          "punctuation.terminator.statement.c",
          "punctuation.section.block.begin.bracket.curly.c",
          "punctuation.section.block.end.bracket.curly.c",
          "punctuation.section.parens.begin.bracket.round.c",
          "punctuation.section.parens.end.bracket.round.c",
          "punctuation.section.parameters.begin.bracket.round.c",
          "punctuation.section.parameters.end.bracket.round.c",
          "punctuation.section.block.begin.java",
          "punctuation.section.block.end.java",
          "punctuation.definition.method-parameters.begin.java",
          "punctuation.definition.method-parameters.end.java",
          "meta.method.identifier.java",
          "punctuation.section.method.begin.java",
          "punctuation.section.method.end.java",
          "punctuation.terminator.java",
          "punctuation.section.class.begin.java",
          "punctuation.section.class.end.java",
          "punctuation.section.inner-class.begin.java",
          "punctuation.section.inner-class.end.java",
          "meta.method-call.java",
          "punctuation.section.class.begin.bracket.curly.java",
          "punctuation.section.class.end.bracket.curly.java",
          "punctuation.section.method.begin.bracket.curly.java",
          "punctuation.section.method.end.bracket.curly.java",
          "punctuation.separator.period.java",
          "punctuation.bracket.angle.java",
          "punctuation.definition.annotation.java",
          "meta.method.body.java",
          "punctuation.separator.delimiter",
          "punctuation.separator.key-value",
          "punctuation.separator.list.comma.css",
          "punctuation.separator.period.python",
          "punctuation.separator.element.python",
          "punctuation.parenthesis.begin.python",
          "punctuation.parenthesis.end.python",
          "storage.modifier.lifetime.rust",
          "support.constant.property-value",
          "support.type.property-name",
          "token.package",
          "token.variable.parameter.java",
          "variable.c",
          "variable.parameter.function",
        ],
        settings: {
          foreground: scheme.foreground,
        },
      },
      {
        scope: [
          "constant.regexp.xi",
          "emphasis md",
          "keyword",
          "keyword.control",
          "keyword.operator.address.go",
          "keyword.operator.arithmetic.go",
          "keyword.operator.assignment.c",
          "keyword.operator.comparison.c",
          "keyword.operator.c",
          "keyword.operator.increment.c",
          "keyword.operator.decrement.c",
          "keyword.operator.bitwise.shift.c",
          "keyword.operator.assignment.cpp",
          "keyword.operator.comparison.cpp",
          "keyword.operator.cpp",
          "keyword.operator.increment.cpp",
          "keyword.operator.decrement.cpp",
          "keyword.operator.bitwise.shift.cpp",
          "keyword.operator.assignment.compound",
          "keyword.operator.delete",
          "keyword.operator.error-control.php",
          "keyword.operator.expression.delete",
          "keyword.operator.expression.in",
          "keyword.operator.expression.of",
          "keyword.operator.expression.instanceof",
          "keyword.operator.new",
          "keyword.operator.expression.typeof",
          "keyword.operator.expression.void",
          "keyword.operator.expression.instanceof",
          "keyword.operator.expression.keyof",
          "keyword.operator.heredoc.php",
          "keyword.operator.nowdoc.php",
          "keyword.operator.instanceof.java",
          "keyword.operator.logical.python",
          "keyword.operator.module",
          "keyword.operator.new",
          "keyword.operator.optional",
          "keyword.operator.regexp.php",
          "keyword.operator.sigil.rust",
          "keyword.operator.sizeof.c",
          "keyword.operator.sizeof.cpp",
          "keyword.operator.ternary",
          "keyword.operator.type.php",
          "markup.italic, punctuation.definition.italic",
          "todo.emphasis",
          "markup.underline.link.markdown",
          "markup.underline.link.image.markdown",
          "meta.selector",
          "punctuation.definition.template-expression.begin",
          "punctuation.definition.template-expression.end",
          "punctuation.quasi.element",
          "punctuation.section.embedded",
          "punctuation.section.embedded.begin",
          "punctuation.section.embedded.end",
          "punctuation.separator.c",
          "punctuation.separator.cpp",
          "storage",
          "support.constant.edge",
          "support.type.fx.hlsl",
          "support.type.object.hlsl",
          "support.type.object.rw.hlsl",
          "support.type.sampler.hlsl",
          "support.type.texture.hlsl",
          "text.html.laravel-blade source.php.embedded.line.html entity.name.tag.laravel-blade",
          "text.html.laravel-blade source.php.embedded.line.html support.constant.laravel-blade",
          "token.debug-token",
          "token.package.keyword",
          "token.storage",
          "variable.other.generic-type.haskell",
        ],
        settings: {
          foreground: scheme.purple,
        },
      },
      {
        scope: [
          "constant",
          "constant.character.format.placeholder.other.python",
          "constant.numeric",
          "control.elements, keyword.operator.less",
          "entity.other.attribute-name",
          "punctuation.definition.constant",
        ],
        settings: {
          foreground: orange,
        },
      },
      {
        scope: ["entity.other.attribute-name.class.css"],
        settings: {
          fontStyle: "normal",
          foreground: orange,
        },
      },
      {
        scope: [
          "inline-color-decoration rgb-value",
          "keyword.operator.quantifier.regexp",
          "less rgb-value",
          "markup.bold",
          "todo.bold",
          "punctuation.definition.bold.markdown",
          "storage.type.haskell",
          "support.constant.color.w3c-standard-color-name.css",
          "support.constant.color.w3c-standard-color-name.css",
          "support.constant.color.w3c-standard-color-name.scss",
          "support.constant.core.rust",
          "support.constant.elm",
          "support.constant.ext.php",
          "support.constant.std.php",
          "support.constant.core.php",
          "support.constant.parser-token.php",
          "support.constant.font-name",
          "support.constant.json",
          "support.constant.property-value.scss",
          "support.constant.property-value.css",
          "support.constant.property.math",
          "support.variable.property.process",
          "token.warn-token",
          "variable.parameter.function.language.python",
          "variable.parameter.function.python",
          "wikiword.xi",
        ],
        settings: {
          foreground: orange,
        },
      },
      {
        scope: [
          "beginning.punctuation.definition.list.markdown",
          "constant.character.character-class.regexp.xi",
          "constant.character.entity",
          "constant.other.character-class.regexp",
          "entity.name.label.cs",
          "entity.name.section.markdown",
          "entity.name.tag",
          "entity.name.variable.local.cs",
          "keyword.other.unit",
          "markup.deleted.diff",
          "markup.heading",
          "markup.heading.setext.1.markdown",
          "markup.heading.setext.2.markdown",
          "meta.arguments.coffee",
          "meta.definition.variable.name.groovy",
          "meta.definition.variable.name.java",
          "meta.function.c",
          "meta.function.cpp",
          "meta.property.object",
          "meta.scope.prerequisites.makefile",
          "meta.symbol.clojure",
          "punctuation.definition.delayed.unison",
          "punctuation.definition.list.begin.unison",
          "punctuation.definition.list.end.unison",
          "punctuation.definition.ability.begin.unison",
          "punctuation.definition.ability.end.unison",
          "punctuation.operator.assignment.as.unison",
          "punctuation.separator.pipe.unison",
          "punctuation.separator.delimiter.unison",
          "punctuation.definition.hash.unison",
          "punctuation.definition.heading.markdown",
          "punctuation.definition.list.begin.markdown",
          "punctuation.definition.list.markdown",
          "punctuation.definition.metadata.markdown",
          "punctuation.definition.string.begin.markdown",
          "punctuation.definition.string.end.markdown",
          "punctuation.section.embedded, variable.interpolation",
          "selector.sass",
          "source.java",
          "source.json meta.structure.dictionary.json > string.quoted.json",
          "source.json meta.structure.dictionary.json > string.quoted.json > punctuation.string",
          "support.type.object.console",
          "support.type.property-name.json",
          "support.type.property-name.json punctuation",
          "support.variable.dom",
          "support.variable.property.dom",
          "support.variable.magic.python",
          "text.bracketed",
          "text.variable",
          "variable",
          "variable.language.rust",
          "variable.language",
          "variable.other.class.php",
          "variable.other.readwrite",
          "meta.object-literal.key",
          "support.variable.property",
          "support.variable.object.process",
          "support.variable.object.node",
          "variable.parameter.function.coffee",
          "variable.parameter.function.js",
        ],
        settings: {
          foreground: scheme.red,
        },
      },
      {
        scope: [
          "entity.global.clojure",
          "entity.name.class",
          "entity.name.class.identifier.namespace.type",
          "entity.name.function.xi",
          "entity.name.label.cs",
          "entity.name.lifetime.rust",
          "entity.name.namespace",
          "entity.name.package.go",
          "entity.name.scope-resolution.function.call",
          "entity.name.scope-resolution.function.definition",
          "entity.name.type",
          "entity.name.type.module",
          "entity.name.type.namespace",
          "entity.other.inherited-class",
          "import.storage.java",
          "keyword.operator.assignment.go",
          "markup.changed.diff",
          "punctuation.definition.bold",
          "source.makefile",
          "storage.modifier.import.groovy",
          "storage.modifier.import.java",
          "storage.type.java",
          "storage.type.generic.java",
          "storage.type.annotation.java",
          "storage.type.cs",
          "storage.type.object.array.java",
          "storage.type.php",
          "meta.other.type.phpdoc.php",
          "keyword.other.type.php",
          "keyword.other.array.phpdoc.php",
          "support.class",
          "entity.name.type.class",
          "support.constant.math",
          "support.module.node",
          "support.type.object.module",
          "support.module.node",
          "support.other.namespace.use.php",
          "support.other.namespace.use-as.php",
          "support.other.namespace.php",
          "entity.other.alias.php",
          "meta.interface.php",
          "support.type.primitive",
          "support.type.primitive.ts",
          "support.type.builtin.ts",
          "support.type.primitive.tsx",
          "support.type.builtin.tsx",
          "support.type.swift",
          "support.type.vb.asp",
          "support.variable.semantic.hlsl",
          "token.storage.type.java",
          "variable.other.class.js",
          "variable.other.class.ts",
          "variable.other.constant",
          "variable.parameter.function.language.special.self.python",
        ],
        settings: {
          foreground: scheme.yellow,
        },
      },
      {
        scope: ["invalid.illegal.non-null-typehinted.php", "token.error-token"],
        settings: {
          foreground: borderFocused,
        },
      },
      {
        scope: [
          "constant.other.color.rgb-value.xi",
          "invalid.broken",
          "invalid.deprecated",
          "invalid.illegal",
          "invalid.unimplemented",
        ],
        settings: {
          foreground: scheme.brightWhite,
        },
      },
      {
        scope: [
          "comment.block.documentation",
          "comment.line.double-slash",
          "entity.other.attribute-name.js",
          "entity.other.attribute-name.jsx",
          "entity.other.attribute-name.pseudo-element.css",
          "entity.other.attribute-name.ts",
          "entity.other.attribute-name.tsx",
          "entity.other.inherited-class",
          "keyword.control.flow.python",
          "keyword.control.import.python",
          "keyword.declaration",
          "markup.italic.markdown",
          "markup.quote",
          "meta.block keyword.operator.new",
          "meta.block meta.function-call variable.other.object",
          "meta.function.variable.css",
          "meta.var storage.type",
          "punctuation.definition.italic.markdown",
          "punctuation.definition.string.css",
          "storage.type.annotation",
          "string.quoted.double.css",
          "support.variable",
          "variable.argument.css",
          "variable.language",
          "variable.other.object.property",
          "variable.parameter",
        ],
        settings: {
          fontStyle: "italic",
        },
      },
      {
        scope: [
          "constant.character.escape",
          "constant.keyword.clojure",
          "constant.language.symbol.elixir",
          "constant.language.symbol.ruby",
          "constant.other.symbol",
          "entity.name.class.xi",
          "entity.other.attribute-name.pseudo-class",
          "entity.other.attribute-name.pseudo-element",
          "keyword.control.xi",
          "keyword.operator.arithmetic",
          "keyword.operator.comparison",
          "keyword.operator.decrement",
          "keyword.operator.increment",
          "keyword.operator.relational",
          "keyword.operator.assignment",
          "keyword.operator.assignment.compound.js",
          "keyword.operator.assignment.compound.ts",
          "keyword.operator.bitwise",
          "keyword.operator.channel",
          "keyword.operator.comparison.php",
          "keyword.operator.css",
          "keyword.operator.scss",
          "keyword.operator.less",
          "keyword.operator.logical",
          "keyword.operator.logical.php",
          "keyword.operator.bitwise.php",
          "keyword.operator.arithmetic.php",
          "rgb-value",
          "source.json meta.structure.dictionary.json > constant.language.json",
          "source.json meta.structure.array.json > constant.language.json",
          "string.regexp",
          "support.function",
          "support.token.decorator.python",
          "meta.function.decorator.identifier.python",
          "support.type.object.dom",
          "support.type.posix-reserved.c",
          "support.type.posix-reserved.cpp",
          "support.type.prelude.elm",
          "support.type.python",
          "support.type.vendored.property-name.css",
        ],
        settings: {
          foreground: scheme.cyan,
        },
      },
      {
        scope: [
          "comment markup.link",
          "markup.quote.markdown",
          "punctuation.definition.tag.xi",
        ],
        settings: {
          foreground: scheme.brightBlack,
        },
      },
      {
        scope: [
          "accent.xi",
          "constant.character.xi",
          "entity.name.function",
          "entity.name.function",
          "support.function.console",
          "entity.name.goto-label.php",
          "support.other.php",
          "meta.require",
          "support.function.any-method",
          "variable.function",
        ],
        settings: {
          foreground: scheme.blue,
        },
      },
      {
        scope: ["entity.other.attribute-name.id"],
        settings: {
          fontStyle: "normal",
          foreground: scheme.blue,
        },
      },
      {
        scope: [
          "keyword.operator.expression.import",
          "keyword.other.special-method",
          "markup.heading punctuation.definition.heading, entity.name.section",
          "meta.diff.header.from-file",
          "meta.diff.header.to-file",
          "punctuation.definition.from-file.diff",
          "punctuation.definition.to-file.diff",
          "meta.function-call.generic.python",
          "meta.function-call.php",
          "meta.function-call.object.php",
          "meta.function-call.static.php",
          "meta.function.decorator.python",
          "meta.method.groovy",
          "meta.method.java",
          "string.other.link.title.markdown",
          "string.other.link.description.markdown",
          "support.function.std.rust",
          "support.type.type.flowtype",
          "token.info-token",
        ],
        settings: {
          foreground: scheme.blue,
        },
      },
      {
        scope: ["beginning.punctuation.definition.list.markdown.xi"],
        settings: {
          foreground: gray,
        },
      },
      {
        scope: ["comment, punctuation.definition.comment"],
        settings: {
          fontStyle: "italic",
          foreground: gray,
        },
      },
      {
        scope: [
          "beginning.punctuation.definition.quote.markdown.xi",
          "keyword.other.substitution.begin",
          "keyword.other.substitution.end",
          "keyword.other.template.begin",
          "keyword.other.template.end",
          "markup.inline.raw.markdown",
          "markup.inline.raw.string.markdown",
          "markup.inserted.diff",
          "meta.definition.class.inherited.classes.groovy",
          "punctuation.definition.string.begin",
          "punctuation.definition.string.end",
          "source.ini",
          "source.json meta.structure.dictionary.json > value.json > string.quoted.json",
          "source.json meta.structure.array.json > value.json > string.quoted.json",
          "source.json meta.structure.dictionary.json > value.json > string.quoted.json > punctuation",
          "source.json meta.structure.array.json > value.json > string.quoted.json > punctuation",
          "string",
        ],
        settings: {
          foreground: scheme.green,
        },
      },
      {
        scope: [
          "meta.brace.square",
          "block.scope.end",
          "block.scope.begin",
          "function.brace",
          "function.parameter",
          "function.parameter.ruby, function.parameter.cs",
          "invalid.illegal.bad-ampersand.html",
          "invalid.xi",
          "keyword.operator",
          "keyword.operator.misc.rust",
          "markup.heading.setext",
          "meta.tag",
          "meta.template.expression",
          "punctuation.definition.arguments.begin.python",
          "punctuation.definition.arguments.end.python",
          "punctuation.separator.arguments.python",
          "punctuation.definition.list.begin.python",
          "punctuation.definition.list.end.python",
          "punctuation.definition.block.sequence.item.yaml",
          "punctuation.definition.parameters.begin.bracket.round.php",
          "punctuation.definition.parameters.end.bracket.round.php",
          "punctuation.separator.delimiter.php",
          "punctuation.section.scope.begin.php",
          "punctuation.section.scope.end.php",
          "punctuation.terminator.expression.php",
          "punctuation.definition.arguments.begin.bracket.round.php",
          "punctuation.definition.arguments.end.bracket.round.php",
          "punctuation.definition.storage-type.begin.bracket.round.php",
          "punctuation.definition.storage-type.end.bracket.round.php",
          "punctuation.definition.array.begin.bracket.round.php",
          "punctuation.definition.array.end.bracket.round.php",
          "punctuation.definition.begin.bracket.round.php",
          "punctuation.definition.end.bracket.round.php",
          "punctuation.definition.begin.bracket.curly.php",
          "punctuation.definition.end.bracket.curly.php",
          "punctuation.definition.section.switch-block.end.bracket.curly.php",
          "punctuation.definition.section.switch-block.start.bracket.curly.php",
          "punctuation.definition.section.switch-block.begin.bracket.curly.php",
          "punctuation.definition.section.switch-block.end.bracket.curly.php",
          "punctuation.section.array.begin.php",
          "punctuation.section.array.end.php",
          "punctuation.section.block.begin.bracket.curly.cpp",
          "punctuation.section.block.end.bracket.curly.cpp",
          "punctuation.terminator.statement.c",
          "punctuation.section.block.begin.bracket.curly.c",
          "punctuation.section.block.end.bracket.curly.c",
          "punctuation.section.parens.begin.bracket.round.c",
          "punctuation.section.parens.end.bracket.round.c",
          "punctuation.section.parameters.begin.bracket.round.c",
          "punctuation.section.parameters.end.bracket.round.c",
          "punctuation.section.block.begin.java",
          "punctuation.section.block.end.java",
          "punctuation.definition.method-parameters.begin.java",
          "punctuation.definition.method-parameters.end.java",
          "meta.method.identifier.java",
          "punctuation.section.method.begin.java",
          "punctuation.section.method.end.java",
          "punctuation.terminator.java",
          "punctuation.section.class.begin.java",
          "punctuation.section.class.end.java",
          "punctuation.section.inner-class.begin.java",
          "punctuation.section.inner-class.end.java",
          "meta.method-call.java",
          "punctuation.section.class.begin.bracket.curly.java",
          "punctuation.section.class.end.bracket.curly.java",
          "punctuation.section.method.begin.bracket.curly.java",
          "punctuation.section.method.end.bracket.curly.java",
          "punctuation.separator.period.java",
          "punctuation.bracket.angle.java",
          "punctuation.definition.annotation.java",
          "meta.method.body.java",
          "punctuation.separator.delimiter",
          "punctuation.separator.key-value",
          "punctuation.separator.list.comma.css",
          "punctuation.separator.period.python",
          "punctuation.separator.element.python",
          "punctuation.parenthesis.begin.python",
          "punctuation.parenthesis.end.python",
          "storage.modifier.lifetime.rust",
          "support.constant.property-value",
          "support.type.property-name",
          "token.package",
          "token.variable.parameter.java",
          "variable.c",
          "variable.parameter.function",
        ],
        settings: {
          foreground: scheme.foreground,
        },
      },
      {
        scope: [
          "constant.regexp.xi",
          "emphasis md",
          "keyword",
          "keyword.control",
          "keyword.operator.address.go",
          "keyword.operator.arithmetic.go",
          "keyword.operator.assignment.c",
          "keyword.operator.comparison.c",
          "keyword.operator.c",
          "keyword.operator.increment.c",
          "keyword.operator.decrement.c",
          "keyword.operator.bitwise.shift.c",
          "keyword.operator.assignment.cpp",
          "keyword.operator.comparison.cpp",
          "keyword.operator.cpp",
          "keyword.operator.increment.cpp",
          "keyword.operator.decrement.cpp",
          "keyword.operator.bitwise.shift.cpp",
          "keyword.operator.assignment.compound",
          "keyword.operator.delete",
          "keyword.operator.error-control.php",
          "keyword.operator.expression.delete",
          "keyword.operator.expression.in",
          "keyword.operator.expression.of",
          "keyword.operator.expression.instanceof",
          "keyword.operator.new",
          "keyword.operator.expression.typeof",
          "keyword.operator.expression.void",
          "keyword.operator.expression.instanceof",
          "keyword.operator.expression.keyof",
          "keyword.operator.heredoc.php",
          "keyword.operator.nowdoc.php",
          "keyword.operator.instanceof.java",
          "keyword.operator.logical.python",
          "keyword.operator.module",
          "keyword.operator.new",
          "keyword.operator.optional",
          "keyword.operator.regexp.php",
          "keyword.operator.sigil.rust",
          "keyword.operator.sizeof.c",
          "keyword.operator.sizeof.cpp",
          "keyword.operator.ternary",
          "keyword.operator.type.php",
          "markup.italic, punctuation.definition.italic",
          "todo.emphasis",
          "markup.underline.link.markdown",
          "markup.underline.link.image.markdown",
          "meta.selector",
          "punctuation.definition.template-expression.begin",
          "punctuation.definition.template-expression.end",
          "punctuation.quasi.element",
          "punctuation.section.embedded",
          "punctuation.section.embedded.begin",
          "punctuation.section.embedded.end",
          "punctuation.separator.c",
          "punctuation.separator.cpp",
          "storage",
          "support.constant.edge",
          "support.type.fx.hlsl",
          "support.type.object.hlsl",
          "support.type.object.rw.hlsl",
          "support.type.sampler.hlsl",
          "support.type.texture.hlsl",
          "text.html.laravel-blade source.php.embedded.line.html entity.name.tag.laravel-blade",
          "text.html.laravel-blade source.php.embedded.line.html support.constant.laravel-blade",
          "token.debug-token",
          "token.package.keyword",
          "token.storage",
          "variable.other.generic-type.haskell",
        ],
        settings: {
          foreground: scheme.purple,
        },
      },
      {
        scope: [
          "constant",
          "constant.character.format.placeholder.other.python",
          "constant.numeric",
          "control.elements, keyword.operator.less",
          "entity.other.attribute-name",
          "punctuation.definition.constant",
        ],
        settings: {
          foreground: orange,
        },
      },
      {
        scope: ["entity.other.attribute-name.class.css"],
        settings: {
          fontStyle: "normal",
          foreground: orange,
        },
      },
      {
        scope: [
          "inline-color-decoration rgb-value",
          "keyword.operator.quantifier.regexp",
          "less rgb-value",
          "markup.bold",
          "todo.bold",
          "punctuation.definition.bold.markdown",
          "storage.type.haskell",
          "support.constant.color.w3c-standard-color-name.css",
          "support.constant.color.w3c-standard-color-name.css",
          "support.constant.color.w3c-standard-color-name.scss",
          "support.constant.core.rust",
          "support.constant.elm",
          "support.constant.ext.php",
          "support.constant.std.php",
          "support.constant.core.php",
          "support.constant.parser-token.php",
          "support.constant.font-name",
          "support.constant.json",
          "support.constant.property-value.scss",
          "support.constant.property-value.css",
          "support.constant.property.math",
          "support.variable.property.process",
          "token.warn-token",
          "variable.parameter.function.language.python",
          "variable.parameter.function.python",
          "wikiword.xi",
        ],
        settings: {
          foreground: orange,
        },
      },
      {
        scope: [
          "beginning.punctuation.definition.list.markdown",
          "constant.character.character-class.regexp.xi",
          "constant.character.entity",
          "constant.other.character-class.regexp",
          "entity.name.label.cs",
          "entity.name.section.markdown",
          "entity.name.tag",
          "entity.name.variable.local.cs",
          "keyword.other.unit",
          "markup.deleted.diff",
          "markup.heading",
          "markup.heading.setext.1.markdown",
          "markup.heading.setext.2.markdown",
          "meta.arguments.coffee",
          "meta.definition.variable.name.groovy",
          "meta.definition.variable.name.java",
          "meta.function.c",
          "meta.function.cpp",
          "meta.property.object",
          "meta.scope.prerequisites.makefile",
          "meta.symbol.clojure",
          "punctuation.definition.delayed.unison",
          "punctuation.definition.list.begin.unison",
          "punctuation.definition.list.end.unison",
          "punctuation.definition.ability.begin.unison",
          "punctuation.definition.ability.end.unison",
          "punctuation.operator.assignment.as.unison",
          "punctuation.separator.pipe.unison",
          "punctuation.separator.delimiter.unison",
          "punctuation.definition.hash.unison",
          "punctuation.definition.heading.markdown",
          "punctuation.definition.list.begin.markdown",
          "punctuation.definition.list.markdown",
          "punctuation.definition.metadata.markdown",
          "punctuation.definition.string.begin.markdown",
          "punctuation.definition.string.end.markdown",
          "punctuation.section.embedded, variable.interpolation",
          "selector.sass",
          "source.java",
          "source.json meta.structure.dictionary.json > string.quoted.json",
          "source.json meta.structure.dictionary.json > string.quoted.json > punctuation.string",
          "support.type.object.console",
          "support.type.property-name.json",
          "support.type.property-name.json punctuation",
          "support.variable.dom",
          "support.variable.property.dom",
          "support.variable.magic.python",
          "text.bracketed",
          "text.variable",
          "variable",
          "variable.language.rust",
          "variable.language",
          "variable.other.class.php",
          "variable.other.readwrite",
          "meta.object-literal.key",
          "support.variable.property",
          "support.variable.object.process",
          "support.variable.object.node",
          "variable.parameter.function.coffee",
          "variable.parameter.function.js",
        ],
        settings: {
          foreground: scheme.red,
        },
      },
      {
        scope: [
          "entity.global.clojure",
          "entity.name.class",
          "entity.name.class.identifier.namespace.type",
          "entity.name.function.xi",
          "entity.name.label.cs",
          "entity.name.lifetime.rust",
          "entity.name.namespace",
          "entity.name.package.go",
          "entity.name.scope-resolution.function.call",
          "entity.name.scope-resolution.function.definition",
          "entity.name.type",
          "entity.name.type.module",
          "entity.name.type.namespace",
          "entity.other.inherited-class",
          "import.storage.java",
          "keyword.operator.assignment.go",
          "markup.changed.diff",
          "punctuation.definition.bold",
          "source.makefile",
          "storage.modifier.import.groovy",
          "storage.modifier.import.java",
          "storage.type.java",
          "storage.type.generic.java",
          "storage.type.annotation.java",
          "storage.type.cs",
          "storage.type.object.array.java",
          "storage.type.php",
          "meta.other.type.phpdoc.php",
          "keyword.other.type.php",
          "keyword.other.array.phpdoc.php",
          "support.class",
          "entity.name.type.class",
          "support.constant.math",
          "support.module.node",
          "support.type.object.module",
          "support.module.node",
          "support.other.namespace.use.php",
          "support.other.namespace.use-as.php",
          "support.other.namespace.php",
          "entity.other.alias.php",
          "meta.interface.php",
          "support.type.primitive",
          "support.type.primitive.ts",
          "support.type.builtin.ts",
          "support.type.primitive.tsx",
          "support.type.builtin.tsx",
          "support.type.swift",
          "support.type.vb.asp",
          "support.variable.semantic.hlsl",
          "token.storage.type.java",
          "variable.other.class.js",
          "variable.other.class.ts",
          "variable.other.constant",
          "variable.parameter.function.language.special.self.python",
        ],
        settings: {
          foreground: scheme.yellow,
        },
      },
      {
        scope: ["invalid.illegal.non-null-typehinted.php", "token.error-token"],
        settings: {
          foreground: borderFocused,
        },
      },
      {
        scope: [
          "constant.other.color.rgb-value.xi",
          "invalid.broken",
          "invalid.deprecated",
          "invalid.illegal",
          "invalid.unimplemented",
        ],
        settings: {
          foreground: scheme.brightWhite,
        },
      },
      {
        scope: [
          "comment.block.documentation",
          "comment.line.double-slash",
          "entity.other.attribute-name.js",
          "entity.other.attribute-name.jsx",
          "entity.other.attribute-name.pseudo-element.css",
          "entity.other.attribute-name.ts",
          "entity.other.attribute-name.tsx",
          "entity.other.inherited-class",
          "keyword.control.flow.python",
          "keyword.control.import.python",
          "keyword.declaration",
          "markup.italic.markdown",
          "markup.quote",
          "meta.block keyword.operator.new",
          "meta.block meta.function-call variable.other.object",
          "meta.function.variable.css",
          "meta.var storage.type",
          "punctuation.definition.italic.markdown",
          "punctuation.definition.string.css",
          "storage.type.annotation",
          "string.quoted.double.css",
          "support.variable",
          "variable.argument.css",
          "variable.language",
          "variable.other.object.property",
          "variable.parameter",
        ],
        settings: {
          fontStyle: "italic",
        },
      },
    ],
  };
}

export default theme;
